defaults: &defaults
    working_directory: /home/circleci/src/github.com/bankrs/bosh

buildsteps: &buildsteps
    steps:
      - checkout

      - run: mkdir -p $TEST_RESULTS

      - run: go get github.com/jstemmer/go-junit-report

      - run:
          name: go vet
          command: |
            go vet $(go list ./... | grep -v /vendor/) | tee ${TEST_RESULTS}/go-vet-${VERSION}.out

      - run:
          name: go test
          command: |
            trap "/home/circleci/bin/go-junit-report <${TEST_RESULTS}/go-test-${VERSION}.out > ${TEST_RESULTS}/go-test-report-${VERSION}.xml" EXIT
            go test ./... | tee ${TEST_RESULTS}/go-test-${VERSION}.out

      - run:
          name: go test -race
          command: |
            go test -race ./... | tee ${TEST_RESULTS}/go-test-race-${VERSION}.out

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results


jobs:
  go-1.9:
    <<: *defaults
    environment:
      GOPATH: /home/circleci
      TEST_RESULTS: /tmp/test-results
      VERSION: 1.9
    docker:
      - image: golang:1.9
    <<: *buildsteps

  go-1.8:
    <<: *defaults
    environment:
      GOPATH: /home/circleci
      TEST_RESULTS: /tmp/test-results
      VERSION: 1.8
    docker:
      - image: golang:1.8
    <<: *buildsteps

  go-1.7:
    <<: *defaults
    environment:
      GOPATH: /home/circleci
      TEST_RESULTS: /tmp/test-results
      VERSION: 1.7
    docker:
      - image: golang:1.7
    <<: *buildsteps

workflows:
  version: 2
  build_and_test:
    jobs:
      - go-1.9
      - go-1.8
      - go-1.7
